" Vundle template
" <StartVundle>
set nocompatible
filetype off

" Include vundle in runtime path & initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'jiangmiao/auto-pairs'
Plugin 'wesQ3/vim-windowswap'
call vundle#end()
filetype plugin indent on
" <EndVundle>

" <StartPreferences>
color blackboard

" Wrap line, don't break word
" Source: Vimcast episode 16 - Soft Wrap
set wrap linebreak nolist

" Line Number on (without relative number)
set number norelativenumber
set listchars=tab:▸\ ,eol:¬
set tabstop=2 softtabstop=2 shiftwidth=2 expandtab

" Mouse: Enabled (useful for window resize
set ttyfast
set mouse=a
set ttymouse=xterm2
" <EndPreferences>

" <StartKeyMap>
" Toggle whitespace
nmap <leader>l :set list!<CR>
execute "set <A-h>=\eh"
execute "set <A-j>=\ej"
execute "set <A-k>=\ek"
execute "set <A-l>=\el"
" Move around windows using Meta-VimDirection
map <A-h> <C-w>h
map <A-j> <C-w>j
map <A-k> <C-w>k
map <A-l> <C-w>l
" <EndKeyMap>

" <StartTriggers>
"Strip Trailing Whitespaces
autocmd BufWritePre * :call Preserve("%s/\\s\\+$//e")
" <EndTriggers>

" <StartFileType>
if has("autocmd")
  filetype on

  autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab

  autocmd FileType vim setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType ruby setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType javascript setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType markdown setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType c setlocal ts=2 sts=2 sw=2 expandtab
  autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
endif
" <EndFileType>

" <StartFunctions>
" Helper function to preserve current cursor when running a command
function! Preserve(command)
  let _s = @/
  let l = line(".")
  let c = col(".")

  execute a:command

  let @/ = _s
  call cursor(l, c)
endfunction
" <EndFunctions>
